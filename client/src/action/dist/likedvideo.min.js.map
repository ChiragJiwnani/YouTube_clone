{"version":3,"sources":["likedvideo.js"],"names":["api","_interopRequireWildcard","require","addtolikedvideo","likedvideodata","dispatch","_ref","data","regeneratorRuntime","async","_context","prev","next","awrap","addtolikevideo","sent","console","log","type","getalllikedvideo","t0","stop","_ref2","_context2","deletelikedvideo","likedvidedata","videoid","viewer","_context3"],"mappings":"sYAAA,IAAAA,IAAAC,wBAAAC,QAAA,0nBACO,IAAMC,gBAAgB,SAACC,GAAD,OAAkB,SAAMC,GAAN,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEpBb,IAAIc,eAAeV,IAFC,KAAA,EAAAE,EAAAI,EAAAK,KAEhCR,EAFgCD,EAEhCC,KACPS,QAAQC,IAAI,kBAAkBb,GAC9BC,EAAS,CAACa,KAAK,kBAAkBX,KAAAA,IACjCF,EAASc,oBAL8BT,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,MAAA,GAOvCM,QAAQC,IAARP,EAAAU,IAPuC,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAW,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,gDAWxC,IAAOF,iBAAiB,WAAA,OAAI,SAAMd,GAAN,IAAAiB,EAAAf,EAAA,OAAAC,mBAAAC,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAAA,OAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAAAJ,mBAAAK,MAERb,IAAImB,oBAFI,KAAA,EAAAG,EAAAC,EAAAR,KAEpBR,EAFoBe,EAEpBf,KAbFJ,EAAAA,CAAAA,KAAgB,yBAACC,QAAAA,IAWKmB,EAAAX,KAAA,GAAA,MAAA,KAAA,EAAAW,EAAAZ,KAAA,EAAAY,EAAAH,GAAAG,EAAA,MAAA,GAXYP,QAAAC,IAAAM,EAAAH,IAWZ,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAAF,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,iDAXY,IAAAG,iBAAA,SAAAC,GAAA,OAAA,SAAApB,GAAA,IAAAqB,EAAAC,EAAA,OAAAnB,mBAAAC,MAAA,SAAAmB,GAAA,OAAA,OAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAAA,OAAAgB,EAAAjB,KAAA,EAAAe,EAAAD,EAAAC,QAAAC,EAAAF,EAAAE,OAAAX,QAAAC,IAAA,iBAAAQ,GAAAG,EAAAhB,KAAA,EAAAJ,mBAAAK,MAAAb,IAAAwB,iBAAAE,EAAAC,IAAA,KAAA,EAyBvCtB,EAASc,oBAzB8BS,EAAAhB,KAAA,GAAA,MAAA,KAAA,EAAAgB,EAAAjB,KAAA,EAAAiB,EAAAR,GAAAQ,EAAA,MAAA,GAAAZ,QAAAC,IAAAW,EAAAR,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAP,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"likedvideo.min.js","sourcesContent":["import * as api from \"../Api\";\nexport const addtolikedvideo=(likedvideodata)=>async(dispatch)=>{\n    try {\n        const {data}=await api.addtolikevideo(likedvideodata)\n        console.log(\"likedvideodata:\",likedvideodata)\n        dispatch({type:\"POST_LIKEDVIDEO\",data})\n        dispatch(getalllikedvideo())\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const  getalllikedvideo=()=>async(dispatch)=>{\n    try {\n        const {data}=await api.getalllikedvideo()\n        dispatch({type:\"FETCH_ALL_LIKED_VIDEOS\",payload:data})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deletelikedvideo=(likedvidedata)=>async(dispatch)=>{\n    try {\n        const {videoid,viewer}=likedvidedata\n        console.log(\"likedvidedata:\",likedvidedata)\n        await api.deletelikedvideo(videoid,viewer)\n        dispatch(getalllikedvideo())\n    } catch (error) {\n        console.log(error)\n    }\n}"]}