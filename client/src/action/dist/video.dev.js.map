{"version":3,"sources":["video.js"],"names":["uploadvideo","videodata","dispatch","filedata","fileoption","console","log","api","data","type","getallvideo","payload","response","message","getvideos","likevideo","likedata","id","Like","viewvideo","viewdata","viewsvideo"],"mappings":";;;;;;;;;AAAA;;;;;;AAEO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD;AAAA,SAAe,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,YAAAA,QAF0B,GAEDF,SAFC,CAE1BE,QAF0B,EAEhBC,UAFgB,GAEDH,SAFC,CAEhBG,UAFgB;AAGlCC,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqBC,UAArB;AAHkC;AAAA,4CAIXG,GAAG,CAACP,WAAJ,CAAgBG,QAAhB,EAA0BC,UAA1B,CAJW;;AAAA;AAAA;AAI1BI,YAAAA,IAJ0B,QAI1BA,IAJ0B;AAKlCN,YAAAA,QAAQ,CAAC;AAAEO,cAAAA,IAAI,EAAE,YAAR;AAAsBD,cAAAA,IAAI,EAAJA;AAAtB,aAAD,CAAR;AACAN,YAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AANkC;AAAA;;AAAA;AAAA;AAAA;AAQlCR,YAAAA,QAAQ,CAAC;AAAEO,cAAAA,IAAI,EAAE,WAAR;AAAqBE,cAAAA,OAAO,EAAE,YAAMC,QAAN,CAAeJ,IAAf,CAAoBK;AAAlD,aAAD,CAAR;;AARkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;AAAA,CAApB;;;;AAYA,IAAMH,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,kBAAOR,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEFK,GAAG,CAACO,SAAJ,EAFE;;AAAA;AAAA;AAEjBN,YAAAA,IAFiB,SAEjBA,IAFiB;AAGzBN,YAAAA,QAAQ,CAAC;AAAEO,cAAAA,IAAI,EAAE,kBAAR;AAA4BE,cAAAA,OAAO,EAAEH;AAArC,aAAD,CAAR;AAHyB;AAAA;;AAAA;AAAA;AAAA;AAKzBH,YAAAA,OAAO,CAACC,GAAR;;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAApB;;;;AASA,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD;AAAA,SAAc,kBAAOd,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvBe,YAAAA,EAFuB,GAEVD,QAFU,CAEvBC,EAFuB,EAEnBC,IAFmB,GAEVF,QAFU,CAEnBE,IAFmB;AAG/Bb,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBU,QAAxB;AAH+B;AAAA,4CAIRT,GAAG,CAACQ,SAAJ,CAAcE,EAAd,EAAkBC,IAAlB,CAJQ;;AAAA;AAAA;AAIvBV,YAAAA,IAJuB,SAIvBA,IAJuB;AAK/BN,YAAAA,QAAQ,CAAC;AAAEO,cAAAA,IAAI,EAAE,WAAR;AAAqBE,cAAAA,OAAO,EAAEH;AAA9B,aAAD,CAAR;AACAN,YAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AAN+B;AAAA;;AAAA;AAAA;AAAA;AAQ/BL,YAAAA,OAAO,CAACC,GAAR;;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;AAAA,CAAlB;;;;AAYA,IAAMa,SAAS,GAAC,SAAVA,SAAU,CAACC,QAAD;AAAA,SAAY,kBAAMlB,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBe,YAAAA,EAFqB,GAEjBG,QAFiB,CAErBH,EAFqB;AAG3BZ,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBW,EAAvB;AAH2B;AAAA,4CAIRV,GAAG,CAACc,UAAJ,CAAeJ,EAAf,CAJQ;;AAAA;AAAA;AAIpBT,YAAAA,IAJoB,SAIpBA,IAJoB;AAK3BN,YAAAA,QAAQ,CAAC;AAACO,cAAAA,IAAI,EAAC,YAAN;AAAmBD,cAAAA,IAAI,EAAJA;AAAnB,aAAD,CAAR;AACAN,YAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AAN2B;AAAA;;AAAA;AAAA;AAAA;AAQ3BL,YAAAA,OAAO,CAACC,GAAR;;AAR2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;AAAA,CAAhB","sourcesContent":["import * as api from \"../Api\";\n\nexport const uploadvideo = (videodata) => async (dispatch) => {\n    try {\n        const { filedata, fileoption } = videodata;\n        console.log(filedata,fileoption)\n        const { data } = await api.uploadvideo(filedata, fileoption)\n        dispatch({ type: 'POST_VIDEO', data })\n        dispatch(getallvideo())\n    } catch (error) {\n        dispatch({ type: 'SET_ERROR', payload: error.response.data.message });\n    }\n}\n\nexport const getallvideo = () => async (dispatch) => {\n    try {\n        const { data } = await api.getvideos()\n        dispatch({ type: 'FETCH_ALL_VIDEOS', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const likevideo = (likedata) => async (dispatch) => {\n    try {\n        const { id, Like } = likedata;\n        console.log(\"likedata:\",likedata)\n        const { data } = await api.likevideo(id, Like);\n        dispatch({ type: \"POST_LIKE\", payload: data })\n        dispatch(getallvideo())\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const viewvideo=(viewdata)=>async(dispatch)=>{\n    try {\n        const{id}=viewdata;\n        console.log(\"view_id:\",id)\n        const {data}=await api.viewsvideo(id)\n        dispatch({type:\"POST_VIEWS\",data})\n        dispatch(getallvideo())\n    } catch (error) {\n        console.log(error)\n    }\n}"],"file":"video.dev.js"}