{"version":3,"sources":["video.js"],"names":["api","_interopRequireWildcard","require","uploadvideo","videodata","dispatch","filedata","fileoption","_ref","data","regeneratorRuntime","async","_context","prev","next","console","log","awrap","sent","type","getallvideo","t0","payload","response","message","stop","_ref2","_context2","getvideos","likevideo","likedata","id","Like","_ref3","_context3","viewvideo","viewdata","_ref4","_context4","viewsvideo"],"mappings":"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","file":"video.min.js","sourcesContent":["import * as api from \"../Api\";\n\nexport const uploadvideo = (videodata) => async (dispatch) => {\n    try {\n        const { filedata, fileoption } = videodata;\n        console.log(filedata,fileoption)\n        const { data } = await api.uploadvideo(filedata, fileoption)\n        dispatch({ type: 'POST_VIDEO', data })\n        dispatch(getallvideo())\n    } catch (error) {\n        dispatch({ type: 'SET_ERROR', payload: error.response.data.message });\n    }\n}\n\nexport const getallvideo = () => async (dispatch) => {\n    try {\n        const { data } = await api.getvideos()\n        dispatch({ type: 'FETCH_ALL_VIDEOS', payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const likevideo = (likedata) => async (dispatch) => {\n    try {\n        const { id, Like } = likedata;\n        console.log(\"likedata:\",likedata)\n        const { data } = await api.likevideo(id, Like);\n        dispatch({ type: \"POST_LIKE\", payload: data })\n        dispatch(getallvideo())\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const viewvideo=(viewdata)=>async(dispatch)=>{\n    try {\n        const{id}=viewdata;\n        console.log(\"view_id:\",id)\n        const {data}=await api.viewsvideo(id)\n        dispatch({type:\"POST_VIEWS\",data})\n        dispatch(getallvideo())\n    } catch (error) {\n        console.log(error)\n    }\n}"]}