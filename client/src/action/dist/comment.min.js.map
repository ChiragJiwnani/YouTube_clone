{"version":3,"sources":["comment.js"],"names":["api","_interopRequireWildcard","require","editcomment","commentdata","dispatch","id","commentbody","_ref","data","regeneratorRuntime","async","_context","prev","next","console","log","awrap","sent","type","payload","getallcomment","t0","stop","postcomment","_ref2","_context2","_ref3","_context3","_context4","deletecomment"],"mappings":"gZAAA,IAAAA,IAAAC,wBAAAC,QAAA,0nBAEO,IAAMC,YAAY,SAACC,GAAD,OAAe,SAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAEzBP,EAAgBF,EAAhBE,GAAGC,EAAaH,EAAbG,YACVQ,QAAQC,IAAI,eAAeZ,GAHKQ,EAAAE,KAAA,EAAAJ,mBAAAO,MAIbjB,IAAIG,YAAYG,EAAGC,IAJN,KAAA,EAAAC,EAAAI,EAAAM,KAIzBT,EAJyBD,EAIzBC,KACPJ,EAAS,CAACc,KAAK,eAAeC,QAAQX,IACtCJ,EAASgB,iBANuBT,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,MAAA,GAQhCG,QAAQC,IAARJ,EAAAU,IARgC,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAW,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,wCAYjC,IAAMC,YAAY,SAACpB,GAAD,OAAe,SAAMC,GAAN,IAAAoB,EAAAhB,EAAA,OAAAC,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAY,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAAAJ,mBAAAO,MAZMZ,IAAAA,YAAND,IAYA,KAAA,EAAAqB,EAAAC,EAAAR,KAZAT,EAYAgB,EAZAhB,KAAAJ,EAAA,CAAAc,KAAA,eAAAC,QAAAX,IAgBhCJ,EAASgB,iBAJuBK,EAAAZ,KAAA,GAAA,MAAA,KAAA,EAAAY,EAAAb,KAAA,EAAAa,EAAAJ,GAAAI,EAAA,MAAA,GAZAX,QAAAC,IAAAU,EAAAJ,IAYA,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,uCAZA,IAAAF,cAAA,WAAA,OAAA,SAAAhB,GAAA,IAAAsB,EAAAlB,EAAA,OAAAC,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAAAJ,mBAAAO,MAGpBjB,IAAAqB,iBAHoB,KAAA,EAAAM,EAAAC,EAAAV,KAGhCH,EAHgCY,EAGhCZ,KAHgCV,EAAA,CAAAc,KAAA,qBAIbnB,QAAIG,IAJSyB,EAAAd,KAAA,GAAA,MAAA,KAAA,EAAAc,EAAAf,KAAA,EAAAe,EAAAN,GAAAM,EAAA,MAAA,GAAAb,QAAAC,IAAAY,EAAAN,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAL,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,2CAKtBJ,IAAAA,cAAK,SAAAb,GAAA,OAAA,SAAND,GAAM,OAAAK,mBAAAC,MAAA,SAAAkB,GAAA,OAAA,OAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,KAAA,EAAA,OAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAAAJ,mBAAAO,MAAfjB,IAAA8B,cAAAxB,IAAe,KAAA,EACfD,EAAAA,iBADewB,EAAAf,KAAA,EAAA,MAAA,KAAA,EAAAe,EAAAhB,KAAA,EAAAgB,EAAAP,GAAAO,EAAA,MAAA,GALiBd,QAAAC,IAAAa,EAAAP,IAKjB,KAAA,EAAA,IAAA,MAAA,OAAAO,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"comment.min.js","sourcesContent":["import * as api from \"../Api\";\n\nexport const editcomment=(commentdata)=>async(dispatch)=>{\n    try {\n        const {id,commentbody}=commentdata\n        console.log(\"commentdata:\",commentdata)\n        const {data}=await api.editcomment(id,commentbody)\n        dispatch({type:\"EDIT_COMMENT\",payload:data})\n        dispatch(getallcomment())\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const postcomment=(commentdata)=>async(dispatch)=>{\n    try {\n        const {data}=await api.postcomment(commentdata)\n        dispatch({type:\"POST_COMMENT\",payload:data})\n        dispatch(getallcomment())\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const getallcomment=()=>async(dispatch)=>{\n    try {\n        const {data}=await api.getallcomment()\n        // console.log(data)\n        dispatch({type:\"FETCH_ALL_COMMENTS\",payload:data})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deletecomment=(id)=>async(dispatch)=>{\n    try {\n        await api.deletecomment(id)\n        dispatch(getallcomment())\n    } catch (error) {\n        console.log(error)\n    }\n}"]}