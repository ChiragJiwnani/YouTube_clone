{"version":3,"sources":["chat.js"],"names":["initialState","messages","chatReducer","state","action","type","payload"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO,CACH;;AADG,CAArB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,wBAAL;AACI;AACA,+BAAYF,KAAZ;AAAmBF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAApC;;AACJ,SAAK,aAAL;AACI;AACA,+BAAYH,KAAZ;AAAmBF,QAAAA,QAAQ,+BAAME,KAAK,CAACF,QAAZ,IAAsBG,MAAM,CAACE,OAA7B;AAA3B;AAAoE;;AACxE;AACI,aAAOH,KAAP;AARR;AAUH,CAXD;;eAaeD,W","sourcesContent":["// chatReducer.js\r\n\r\nconst initialState = {\r\n    messages: []  // Initialize with an empty array\r\n};\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_MESSAGES_SUCCESS':\r\n            // console.log('reducer->Updating state with fetched messages:', action.payload);\r\n            return { ...state, messages: action.payload };\r\n        case 'NEW_MESSAGE':\r\n            // console.log('reducer->Adding new message to state:', action.payload);\r\n            return { ...state, messages: [...state.messages, action.payload] }; // Add new message\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chatReducer;\r\n"],"file":"chat.dev.js"}