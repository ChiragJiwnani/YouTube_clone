"use strict";var _express=_interopRequireDefault(require("express")),_mongoose=_interopRequireDefault(require("mongoose")),_dotenv=_interopRequireDefault(require("dotenv")),_cors=_interopRequireDefault(require("cors")),_bodyParser=_interopRequireDefault(require("body-parser")),_video=_interopRequireDefault(require("./Routes/video.js")),_User=_interopRequireDefault(require("./Routes/User.js")),_chat=_interopRequireDefault(require("./Routes/chat.js")),_path=_interopRequireDefault(require("path")),_comment=_interopRequireDefault(require("./Routes/comment.js")),_chat2=_interopRequireDefault(require("./Models/chat.js")),_crypto=_interopRequireDefault(require("crypto")),_http=require("http"),_socket=_interopRequireDefault(require("./socket.js")),_socket2=require("socket.io"),_child_process=require("child_process");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],o=!0,n=!1,a=void 0;try{for(var s,c=e[Symbol.iterator]();!(o=(s=c.next()).done)&&(r.push(s.value),!t||r.length!==t);o=!0);}catch(e){n=!0,a=e}finally{try{o||null==c.return||c.return()}finally{if(n)throw a}}return r}}function _arrayWithHoles(e){if(Array.isArray(e))return e}var ENCRYPTION_KEY=process.env.ENCRYPTION_KEY||"abcdefghijklmnopqrstuvwxzy012345",IV_LENGTH=16,encryptMessage=function(e){var t=_crypto.default.randomBytes(IV_LENGTH),r=_crypto.default.createCipheriv("aes-256-ctr",Buffer.from(ENCRYPTION_KEY),t),o=r.update(e,"utf8","hex");return o+=r.final("hex"),t.toString("hex")+":"+o},decryptMessage=function(e){var t=_slicedToArray(e.split(":"),2),r=t[0],o=t[1],n=Buffer.from(r,"hex"),a=_crypto.default.createDecipheriv("aes-256-ctr",Buffer.from(ENCRYPTION_KEY),n),s=a.update(o,"hex","utf8");return s+=a.final("utf8")};_dotenv.default.config({path:"./.env"});var app=(0,_express.default)(),server=(0,_http.createServer)(app);(0,_socket.default)(server),app.use((0,_cors.default)()),app.use(_express.default.json({limit:"30mb",extended:!0})),app.use(_express.default.urlencoded({limit:"30mb",extended:!0})),app.use("/uploads",_express.default.static(_path.default.join("uploads"))),app.get("/",function(e,t){t.send("Your tube is working")}),app.use(_bodyParser.default.json()),app.use("/user",_User.default),app.use("/video",_video.default),app.use("/comment",_comment.default),app.use("/chat",_chat.default);var httpServer=(0,_http.createServer)(app),PORT=process.env.PORT,io=new _socket2.Server(httpServer,{cors:{origin:["http://localhost:3000"],methods:["POST","GET","PATCH"],credentials:!0,optionSuccessStatus:200}});io.on("connection",function(o){console.log("a user connected:",o.id),o.on("joinRoom",function(e){var t=e.roomId,r=e.userId;o.join(t),console.log("".concat(r," joined room ").concat(t))}),o.on("chatMessage",function(t){var r,o,n,a,s,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.roomId,o=t.userId,n=t.message,console.log("Message received from ".concat(o," in room ").concat(r,": ").concat(n)),a=encryptMessage(n),s=new _chat2.default({roomId:r,userId:o,message:a}),e.next=6,regeneratorRuntime.awrap(s.save());case 6:c=decryptMessage(a),io.to(r).emit("message",{userId:o,message:c}),console.log("Message broadcasted to room: ".concat(r));case 9:case"end":return e.stop()}})}),o.on("disconnect",function(){console.log("user disconnected")})}),app.post("/translate",function(t,r){var o,n,a,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:o=t.body,n=o.src,a=o.tgt,s='curl -X POST http://localhost:5000/translate -H "Content-Type: application/json" -d \'{"src": "'.concat(n,'", "tgt": "').concat(a,"\"}'"),(0,_child_process.exec)(s,function(e,t){e?r.status(500).json({error:"Translation failed."}):r.json(JSON.parse(t))});case 3:case"end":return e.stop()}})}),app.post("/api/send-email-otp",function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:case"end":return e.stop()}})}),app.post("/api/send-mobile-otp",function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:case"end":return e.stop()}})});var DB_URL=process.env.DB_URL;_mongoose.default.connect(DB_URL).then(function(){console.log("Mongodb Database connected")}).catch(function(e){console.log(e)}),httpServer.listen(PORT,function(){console.log("Server running on Port ".concat(PORT))});
//# sourceMappingURL=index.min.js.map
