{"version":3,"sources":["Auth.js"],"names":["login","req","res","email","body","console","log","users","findOne","existingUser","create","newUser","token","jwt","sign","id","_id","process","env","JWT_SECRET","expiresIn","status","json","result","mess"],"mappings":";;;;;;;AAAA;;AACA;;;;AAIO,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,KADW,GACDF,GAAG,CAACG,IADH,CACXD,KADW;AAEnBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAFmB;AAAA;AAAA,0CAIUI,iBAAMC,OAAN,CAAc;AAAEL,YAAAA,KAAK,EAALA;AAAF,WAAd,CAJV;;AAAA;AAIXM,UAAAA,YAJW;AAKjBJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;;AALiB,cAMZA,YANY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAQSF,iBAAMG,MAAN,CAAa;AAAEP,YAAAA,KAAK,EAALA;AAAF,WAAb,CART;;AAAA;AAQPQ,UAAAA,OARO;AASPC,UAAAA,KATO,GASCC,yBAAIC,IAAJ,CACZ;AACEX,YAAAA,KAAK,EAAEQ,OAAO,CAACR,KADjB;AAEEY,YAAAA,EAAE,EAAEJ,OAAO,CAACK;AAFd,WADY,EAKZC,OAAO,CAACC,GAAR,CAAYC,UALA,EAMZ;AAAEC,YAAAA,SAAS,EAAE;AAAb,WANY,CATD;AAiBblB,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,MAAM,EAAEZ,OAAV;AAAmBC,YAAAA,KAAK,EAALA;AAAnB,WAArB;AAjBa;AAAA;;AAAA;AAAA;AAAA;AAmBbV,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,YAAAA,IAAI,EAAE;AAAR,WAArB;AAnBa;;AAAA;AAAA;AAAA;;AAAA;AAuBTZ,UAAAA,MAvBS,GAuBDC,yBAAIC,IAAJ,CACZ;AACEX,YAAAA,KAAK,EAAEM,YAAY,CAACN,KADtB;AAEEY,YAAAA,EAAE,EAAEN,YAAY,CAACO;AAFnB,WADY,EAKZC,OAAO,CAACC,GAAR,CAAYC,UALA,EAMZ;AAAEC,YAAAA,SAAS,EAAE;AAAb,WANY,CAvBC;AA+BflB,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,MAAM,EAAEd,YAAV;AAAwBG,YAAAA,KAAK,EAALA;AAAxB,WAArB;;AA/Be;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkCjBV,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACE,YAAAA,IAAI,EAAC;AAAN,WAArB;AAlCiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import jwt from \"jsonwebtoken\";\nimport users from \"../Models/Auth.js\";\n\n\n\nexport const login = async (req, res) => {\n  const { email } = req.body;\n  console.log(email);\n  try {\n    const existingUser = await users.findOne({ email });\n    console.log(existingUser)\n    if (!existingUser) {\n      try {\n        const newUser = await users.create({ email });\n        const token = jwt.sign(\n          {\n            email: newUser.email,\n            id: newUser._id,\n          },\n          process.env.JWT_SECRET,\n          { expiresIn: \"1h\" }\n        );\n        res.status(200).json({ result: newUser, token });\n      } catch (error) {\n        res.status(500).json({ mess: \"something went wrong....\" });\n        return\n      }\n    } else {\n      const token = jwt.sign(\n        {\n          email: existingUser.email,\n          id: existingUser._id,\n        },\n        process.env.JWT_SECRET,\n        { expiresIn: \"1h\" }\n      );\n      res.status(200).json({ result: existingUser, token });\n    }\n  } catch (error) {\n    res.status(500).json({mess:'something went wrong....'})\n    return\n  }\n};\n"],"file":"Auth.dev.js"}