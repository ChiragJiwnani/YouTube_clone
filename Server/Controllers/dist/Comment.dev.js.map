{"version":3,"sources":["Comment.js"],"names":["postcomment","req","res","commentdata","body","Comment","save","status","json","message","getcomment","find","commentlist","send","deletecomment","_id","params","id","mongoose","Types","ObjectId","isValid","findByIdAndDelete","editcomment","commentbody","findByIdAndUpdate","$set","updatecomment","likeComment","userId","console","log","findById","comment","likedBy","includes","filter","likes","push","dislikedBy","dislikes","updatedComment","error","dislikeComment"],"mappings":"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","sourcesContent":["import Comment from \"../Models/comment.js\";\nimport mongoose from \"mongoose\";\n\nexport const postcomment = async (req, res) => {\n  const commentdata = req.body;\n  const postcomment = new Comment(commentdata);\n  try {\n    await postcomment.save();\n    res.status(200).json(\"posted the comment\");\n  } catch (error) {\n    res.status(400).json(error.message);\n    return;\n  }\n};\n\nexport const getcomment = async (req, res) => {\n  try {\n    const commentlist = await Comment.find();\n    res.status(200).send(commentlist);\n  } catch (error) {\n    res.status(400).json(error.message);\n    return;\n  }\n};\n\nexport const deletecomment = async (req, res) => {\n  const { id: _id } = req.params;\n  if (!mongoose.Types.ObjectId.isValid(_id)) {\n    return res.status(400).send(\"Comments unavailable..\");\n  }\n  try {\n    await Comment.findByIdAndDelete(_id);\n    res.status(200).json({ message: \"deleted comment\" });\n  } catch (error) {\n    res.status(400).json(error.message);\n    return;\n  }\n};\n\nexport const editcomment = async (req, res) => {\n  const { id: _id } = req.params;\n  const { commentbody } = req.body;\n  if (!mongoose.Types.ObjectId.isValid(_id)) {\n    return res.status(400).send(\"Comments unavailable..\");\n  }\n  try {\n    const updatecomment = await Comment.findByIdAndUpdate(_id, {\n      $set: { commentbody: commentbody },\n    });\n    res.status(200).json(updatecomment);\n  } catch (error) {\n    res.status(400).json(error.message);\n    return;\n  }\n};\n\nexport const likeComment = async (req, res) => {\n  const { id: _id } = req.params;\n  const { userId } = req.body;\n\n  console.log(\"likeCommentController:\", _id, { userId });\n\n  if (!mongoose.Types.ObjectId.isValid(_id)) {\n    return res.status(404).send(\"Invalid comment ID\");\n  }\n\n  try {\n    const comment = await Comment.findById(_id);\n\n    if (!comment) {\n      return res.status(404).send(\"Comment not found\");\n    }\n\n    // Toggle like\n    if (comment.likedBy.includes(userId)) {\n      comment.likedBy = comment.likedBy.filter((id) => id !== userId);\n      comment.likes -= 1;\n    } else {\n      comment.likedBy.push(userId);\n      comment.likes += 1;\n\n      // Remove dislike if present\n      if (comment.dislikedBy.includes(userId)) {\n        comment.dislikedBy = comment.dislikedBy.filter((id) => id !== userId);\n        comment.dislikes -= 1;\n      }\n    }\n    \n\n    const updatedComment = await comment.save();\n    res.status(200).json(updatedComment);\n  } catch (error) {\n    console.error(\"Error liking comment:\", error);\n    res.status(500).json({ message: \"Server error\", error: error.message });\n  }\n};\n\nexport const dislikeComment = async (req, res) => {\n  const { id: _id } = req.params;\n  const { userId } = req.body;\n\n  console.log(\"dislikeCommentController:\", _id, { userId });\n\n  if (!mongoose.Types.ObjectId.isValid(_id)) {\n    return res.status(404).send(\"Invalid comment ID\");\n  }\n\n  try {\n    const comment = await Comment.findById(_id);\n\n    if (!comment) {\n      return res.status(404).send(\"Comment not found\");\n    }\n\n    // Toggle dislike\n    if (comment.dislikedBy.includes(userId)) {\n      comment.dislikedBy = comment.dislikedBy.filter((id) => id !== userId);\n      comment.dislikes -= 1;\n    } else {\n      comment.dislikedBy.push(userId);\n      comment.dislikes += 1;\n\n      // Remove like if present\n      if (comment.likedBy.includes(userId)) {\n        comment.likedBy = comment.likedBy.filter((id) => id !== userId);\n        comment.likes -= 1;\n      }\n    }\n\n    // Remove the comment if it has 2 dislikes\n    if (comment.dislikes >= 2) {\n      await Comment.findByIdAndDelete(_id); // Delete the comment from the database\n      return res.status(200).json({ message: \"Comment removed after 2 likes\" });\n    }\n\n    const updatedComment = await comment.save();\n    res.status(200).json(updatedComment);\n  } catch (error) {\n    console.error(\"Error disliking comment:\", error);\n    res.status(500).json({ message: \"Server error\", error: error.message });\n  }\n};"],"file":"Comment.dev.js"}