{"version":3,"sources":["channel.js"],"names":["_mongoose","_interopRequireDefault","require","_Auth","updatechaneldata","req","res","_id","_req$body","name","desc","updatedata","regeneratorRuntime","async","_context","prev","next","params","id","body","mongoose","Types","ObjectId","isValid","abrupt","status","send","awrap","users","findByIdAndUpdate","$set","new","sent","json","t0","message","stop","getallchanels","allchanels","allchaneldata","_context2","find","forEach","channel","push","email"],"mappings":"0HAAA,IAAAA,UAAAC,uBAAAC,QAAA,aACAC,MAAAF,uBAAAC,QAAA,8FACO,IAAME,iBAAiB,SAAMC,EAAIC,GAAV,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAChBT,EAAKF,EAAIY,OAAZC,GADmBV,EAERH,EAAIc,KAAfV,EAFmBD,EAEnBC,KAAKC,EAFcF,EAEdE,KACRU,UAAAA,QAASC,MAAMC,SAASC,QAAQhB,GAHV,CAAAO,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAU,OAAA,SAIflB,EAAImB,OAAO,KAAKC,KAAK,0BAJN,KAAA,EAAA,OAAAZ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAe,MAD9BC,MAAAA,QAAAC,kBASYtB,EAAI,CACAuB,KAAK,CACDrB,KAAKA,EAVIC,KAACA,IAAA,CAAAqB,KAAA,KAAA,KAAA,EAD9BpB,EAC8BG,EAAAkB,KAAA1B,EAAAmB,OAAA,KAAAQ,KAAAtB,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,MAAA,GAChBP,EAAAA,OAAQ,KAACU,KADO,CAAAkB,QAAArB,EAAAoB,GAAAC,UAAArB,EAAAU,OAAA,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAsB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,iDAAA,IAAAC,cAAA,SAAAhC,EAAAC,GAAA,IAAAgC,EAAAC,EAAA,OAAA3B,mBAAAC,MAAA,SAAA2B,GAAA,OAAA,OAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,KAAA,EAAA,OAAAwB,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAAAJ,mBAAAe,MAyBCC,MAAAA,QAAMa,QAzBP,KAAA,EAyBhBH,EAzBgBE,EAAAR,KAAAO,EAAA,GA2BtBD,EAAWI,QAAQ,SAACC,GA3BEJ,EAAAK,KAAA,CAAArC,IAAAoC,EAAApC,IAAAE,KAAAkC,EAAAlC,KAAAoC,MAAAF,EAAAE,MASVnC,KAACiC,EAAAjC,SAAAJ,EAAAmB,OAAA,KAAAQ,KAAAM,GATSC,EAAAxB,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAwB,EAAAzB,KAAA,EAAAyB,EAAAN,GAAAM,EAAA,MAAA,GAcjBlC,EAAAmB,OAAI,KAAAQ,KAAA,CAAAE,QAAAK,EAAAN,GAAAC,UAdaK,EAAAhB,OAAA,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAgB,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"channel.min.js","sourcesContent":["import mongoose from \"mongoose\";\nimport users from \"../Models/Auth.js\"\nexport const updatechaneldata=async(req,res)=>{\n    const {id:_id}=req.params;\n    const {name,desc}=req.body;\n    if(!mongoose.Types.ObjectId.isValid(_id)){\n        return res.status(404).send(\"Channel unavailable..\")\n    }\n    try {\n        const updatedata=await users.findByIdAndUpdate(\n            _id,{\n                $set:{\n                    name:name,\n                    desc:desc,\n                },\n            },\n            {new:true}\n        );\n        res.status(200).json(updatedata)\n    } catch (error) {\n        res.status(405).json({message:error.message})\n        return\n    }\n}\n\nexport const getallchanels=async(req,res)=>{\n    try {\n        const allchanels=await users.find();\n        const allchaneldata=[]\n        allchanels.forEach((channel)=>{\n            allchaneldata.push({\n                _id:channel._id,\n                name:channel.name,\n                email:channel.email,\n                desc:channel.desc\n            });\n        });\n        res.status(200).json(allchaneldata)\n    } catch (error) {\n        res.status(405).json({message:error.message})\n        return\n    }\n}\n"]}