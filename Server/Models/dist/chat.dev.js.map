{"version":3,"sources":["chat.js"],"names":["chatSchema","mongoose","Schema","roomId","type","String","required","userId","name","message","timestamp","Date","model"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAD2B;AAEnCC,EAAAA,MAAM,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAF2B;AAGnCE,EAAAA,IAAI,EAAE;AAACJ,IAAAA,IAAI,EAACC;AAAN,GAH6B;AAInCI,EAAAA,OAAO,EAAE;AAAEL,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAJ0B;AAIS;AAC5CI,EAAAA,SAAS,EAAE;AAAEN,IAAAA,IAAI,EAAEO,IAAR;AAAc,eAAS,IAAIA,IAAJ;AAAvB;AALwB,CAApB,CAAnB;;eAQeV,qBAASW,KAAT,CAAe,MAAf,EAAuBZ,UAAvB,C","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst chatSchema = new mongoose.Schema({\r\n    roomId: { type: String, required: true },\r\n    userId: { type: String, required: true },\r\n    name: {type:String},\r\n    message: { type: String, required: true },  // This will store the encrypted message\r\n    timestamp: { type: Date, default: new Date() },\r\n});\r\n\r\nexport default mongoose.model(\"Chat\", chatSchema)"],"file":"chat.dev.js"}